<CornerBox@BoxLayout>:
    orientation: 'vertical'
    padding: [10]
    spacing: 10
    size_hint: None, None

<CornerItemBox@BoxLayout>:
    orientation: 'horizontal'
    padding: [5]

<SideItemBox@BoxLayout>:
    orientation: 'vertical'
    padding: [5]
    size_hint: None, None
    size: 100, self.parent.height - self.parent.padding[0] - self.padding[0]

<SideBox@BoxLayout>:
    orientation: 'horizontal'
    padding: [10]
    spacing: 10
    size_hint: None, None


<CountLabel@Label>:
    size_hint: None, None
    size: 100, self.parent.height - self.parent.parent.spacing

<MeterFrame@BoxLayout>:
    orientation: 'horizontal'
    padding: [0]
    spacing: 0
    size_hint: None, None
    size: 100, self.parent.height - self.parent.spacing - self.parent.parent.spacing
    canvas:
        Color:
            rgba: (1,0,0,1)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [10,10,10,10]

<MeterFill@Label>:
    size_hint: None, None
    pos: 0,0
    canvas:
        Color:
            rgba: (0,1,0,1)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: [5,5,5,5]



<MainScreen>:
    FloatLayout:
        BoxLayout:
            size_hint: None, None
            size: 200, 100
            pos: self.parent.width/2-100,self.parent.height - 250
            Button:
                text: 'Draw'
                on_press:
                    root.recalculate_stats()
                    root.draw_card()
                    root.load_buttons()
        BoxLayout:
            size_hint: None, None
            size: 200, 100
            pos: self.parent.width/2 + 200,self.parent.height - 250
            Button:
                text: 'Discard'
                on_press:
                    root.discard_card()
        CornerBox:
            id: pops
            size: 600, len(self.children)*50
            pos: 0, self.parent.height - self.height
            canvas:
                Color:
                    rgba: (100,100,100,0.5)
                RoundedRectangle:
                    size: self.size
                    pos: self.pos
                    radius: [0,0,30,0]
            CornerItemBox:
                id: male_babies
                Label:
                    text: 'Male Babies:'
                CountLabel:
                    id: male_baby_count
                    text: str(app.start_stats['male_baby_count'])
                MeterFrame:
                    MeterFill:
                        id: male_baby_fill
                        size: app.start_stats['male_baby_approval'], self.parent.height
            CornerItemBox:
                id: female_babies
                Label:
                    text: 'Female Babies:'
                CountLabel:
                    id: female_baby_count
                    text: str(app.start_stats['female_baby_count'])
                MeterFrame:
                    MeterFill:
                        id: female_baby_fill
                        size: app.start_stats['female_baby_approval'], self.parent.height
            CornerItemBox:
                id: male_children
                Label:
                    text: 'Male Children:'
                CountLabel:
                    id: male_child_count
                    text: str(app.start_stats['male_child_count'])
                MeterFrame:
                    MeterFill:
                        id: male_child_fill
                        size: app.start_stats['male_child_approval'], self.parent.height
            CornerItemBox:
                id: female_children
                Label:
                    text: 'Female Children:'
                CountLabel:
                    id: female_child_count
                    text: str(app.start_stats['female_child_count'])
                MeterFrame:
                    MeterFill:
                        id: female_child_fill
                        size: app.start_stats['female_child_approval'], self.parent.height
            CornerItemBox:
                id: male_teens
                Label:
                    text: 'Male Teens:'
                CountLabel:
                    id: male_teen_count
                    text: str(app.start_stats['male_teen_count'])
                MeterFrame:
                    MeterFill:
                        id: male_teen_fill
                        size: app.start_stats['male_teen_approval'], self.parent.height
            CornerItemBox:
                id: female_teens
                Label:
                    text: 'Female Teens:'
                CountLabel:
                    id: female_teen_count
                    text: str(app.start_stats['female_teen_count'])
                MeterFrame:
                    MeterFill:
                        id: female_teen_fill
                        size: app.start_stats['female_teen_approval'], self.parent.height
            CornerItemBox:
                id: male_settlers
                Label:
                    text: 'Male Settlers:'
                CountLabel:
                    id: male_settler_count
                    text: str(app.start_stats['male_settler_count'])
                MeterFrame:
                    MeterFill:
                        id: male_settler_fill
                        size: app.start_stats['male_settler_approval'], self.parent.height
            CornerItemBox:
                id: female_settlers
                Label:
                    text: 'Female Settlers:'
                CountLabel:
                    id: female_settler_count
                    text: str(app.start_stats['female_settler_count'])
                MeterFrame:
                    MeterFill:
                        id: female_settler_fill
                        size: app.start_stats['female_settler_approval'], self.parent.height
            CornerItemBox:
                id: male_farmers
                Label:
                    text: 'Male Farmers:'
                CountLabel:
                    id: male_farmer_count
                    text: str(app.start_stats['male_farmer_count'])
                MeterFrame:
                    MeterFill:
                        id: male_farmer_fill
                        size: app.start_stats['male_farmer_approval'], self.parent.height
            CornerItemBox:
                id: female_farmers
                Label:
                    text: 'Female Farmers:'
                CountLabel:
                    id: female_farmer_count
                    text: str(app.start_stats['female_farmer_count'])
                MeterFrame:
                    MeterFill:
                        id: female_farmer_fill
                        size: app.start_stats['female_farmer_approval'], self.parent.height

        SideBox:
            id: status
            size: len(self.children)*115, 100
            pos: self.parent.width/2-self.width/2, self.parent.height-self.height
            canvas:
                Color:
                    rgba: (100,100,100,0.5)
                RoundedRectangle:
                    size: self.size
                    pos: self.pos
                    radius: [0,0,30,30]
            SideItemBox:
                Label:
                    text: 'Year'
                Label:
                    id: year
                    text: str(app.start_stats['year'])
            SideItemBox:
                Label:
                    text: 'Day'
                Label:
                    id: day
                    text: str(app.start_stats['day'])
            SideItemBox:
                Label:
                    text: 'Hour'
                Label:
                    id: hour
                    text: str(app.start_stats['hour'])

        CornerBox:
            id: modules
            size: 600, len(self.children)*50
            pos: self.parent.width-self.width, self.parent.height-self.height
            canvas:
                Color:
                    rgba: (100,100,100,0.5)
                RoundedRectangle:
                    size: self.size
                    pos: self.pos
                    radius: [0,0,0,30]
            CornerItemBox:
                Label:
                    text: 'Surface:'
                CountLabel:
                    id: surface_percentage
                    text: str(int(app.start_stats['ocean_percentage'] * 1.408450704225352)) + '%'
                MeterFrame:
                    canvas:
                        Color:
                            rgba: (.361,.194,0,1)
                        RoundedRectangle:
                            size: self.size
                            pos: self.pos
                            radius: [10,10,10,10]
                    MeterFill:
                        id: ocean_fill
                        size: app.start_stats['ocean_percentage'], self.parent.height
                        canvas:
                            Color:
                                rgba: (0,0,1,1)
                            RoundedRectangle:
                                size: self.size
                                pos: self.pos
                                radius: [5,0,0,5]
                    MeterFill:
                        id: arable_fill
                        size: app.start_stats['arable_percentage'], self.parent.height
                        canvas:
                            Color:
                                rgba: (.1,.8,0,1)
                            RoundedRectangle:
                                size: self.size
                                pos: self.pos
                                radius: [0,5,5,0]
            CornerItemBox:
                Label:
                    text: 'Atmosphere:'
                CountLabel:
                    id: atmosphere_percentage
                    text: str(app.start_stats['atmosphere_percentage']) + '%'
                MeterFrame:
                    canvas:
                        Color:
                            rgba: (.75,.75,.75,1)
                        RoundedRectangle:
                            size: self.size
                            pos: self.pos
                            radius: [10,10,10,10]
                    MeterFill:
                        id: atmosphere_fill
                        size: app.start_stats['atmosphere_percentage'], self.parent.height
                        canvas:
                            Color:
                                rgba: (0,.5,1,1)
                            RoundedRectangle:
                                size: self.size
                                pos: self.pos
                                radius: [5,5,5,5]
            CornerItemBox:
                Label:
                    text: 'Habitat Modules:'
                CountLabel:
                    id: habitat_modules
                    text: str(app.start_stats['habitat_space_used']) + '/' + str(app.start_stats['habitat_modules'])
                MeterFrame:
                    MeterFill:
                        id: habitat_fill
                        size: app.start_stats['habitat_condition'], self.parent.height
            CornerItemBox:
                Label:
                    text: 'Greenhouse Modules:'
                CountLabel:
                    id: greenhouse_modules
                    text: str(app.start_stats['greenhouse_space_used']) + '/' + str(app.start_stats['greenhouse_modules'])
                MeterFrame:
                    MeterFill:
                        id: greenhouse_fill
                        size: app.start_stats['greenhouse_condition'], self.parent.height
            CornerItemBox:
                Label:
                    text: 'Food Production/Reserves:'
                CountLabel:
                    id: food_production
                    text: str(app.start_stats['food_production'] - app.start_stats['food_consumption'])
                MeterFrame:
                    canvas:
                        Color:
                            rgba: (0,0,0,1)
                        RoundedRectangle:
                            size: self.size
                            pos: self.pos
                            radius: [10,10,10,10]
                    MeterFill:
                        id: food_fill
                        size: (app.start_stats['food_reserves']/app.start_stats['food_storage'])*100, self.parent.height
                        canvas:
                            Color:
                                rgba: (.3,.3,.3,1)
                            RoundedRectangle:
                                size: self.size
                                pos: self.pos
                                radius: [5,5,5,5]



<LoadingScreen>:
    FloatLayout:
        BoxLayout:
            size_hint: None, None
            size: 100, 100
            pos: self.parent.width/2,self.parent.height/2
            Button:
                text: 'Go to Main'
                on_press:
                    root.load_buttons()
                    root.manager.transition.direction = 'right'
                    root.manager.current = 'main'
